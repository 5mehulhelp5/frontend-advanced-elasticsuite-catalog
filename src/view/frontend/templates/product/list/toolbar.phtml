<?php
declare(strict_types=1);

use Magento\Catalog\Block\Product\ProductList\Toolbar;
use Magento\Framework\Escaper;


/** @var Escaper $escaper */
/** @var Toolbar $block */
/** @var ViewModelRegistry $viewModels */

/** @var StoreConfig $storeConfig */

$uniqueId = '_' . uniqid();
$additionalOptions = ['page' => 'p'];
?>
<?php
/**
 * Product list toolbar
 *
 * @var $block \Magento\Catalog\Block\Product\ProductList\Toolbar
 */
?>
<script>
    function initToolbar<?= /** @noEscape */  $uniqueId ?>() {
        return {
            options: <?= /* @noEscape */ $block->getWidgetOptionsJson($additionalOptions) ?>.productListToolbarForm || {},
            getUrlParams: function () {
                let decode = window.decodeURIComponent,
                    urlPaths = this.options.url.split('?'),
                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],
                    params = {},
                    parameters, i;

                for (i = 0; i < urlParams.length; i++) {
                    parameters = urlParams[i].split('=');
                    params[decode(parameters[0])] = parameters[1] !== undefined ?
                        decode(parameters[1].replace(/\+/g, '%20')) :
                        '';
                }

                return params;
            },
            getCurrentLimit: function () {
                return this.getUrlParams()[this.options.limit] || this.options.limitDefault;
            },
            getCurrentPage: function () {
                return this.getUrlParams()[this.options.page] || 1;
            },
            changeUrl(paramName, paramValue, defaultValue) {
                let urlPaths = this.options.url.split('?'),
                    baseUrl = urlPaths[0],
                    paramData = this.getUrlParams(),
                    currentPage = this.getCurrentPage(),
                    newPage;

                /**
                 * calculates the page on which the first item of the current page will
                 * be with the new limit and sets that number as the new page
                 */
                if (currentPage > 1 && paramName === this.options.limit) {
                    newPage = Math.floor(this.getCurrentLimit() * (currentPage - 1) / paramValue) + 1;

                    if (newPage > 1) {
                        paramData[this.options.page] = newPage;
                    } else {
                        delete paramData[this.options.page];
                    }
                }

                paramData[paramName] = paramValue;

                if (this.options.post) {
                    vira.postForm({action: baseUrl, data: paramData, skipUenc: true});
                } else {
                    if (paramValue === defaultValue.toString()) {
                        delete paramData[paramName];
                    }
                    paramData = Object.keys(paramData).length === 0
                        ? ''
                        : '?' + (new URLSearchParams(paramData));
                    location.href = baseUrl + paramData
                }
            }
        }
    }
</script>
<?php if ($block->getCollection()->getSize()): ?>
    <div x-data="initToolbar<?= /** @noEscape */ $uniqueId ?>()">
    <?php
    $widget = $this->helper(\Magento\Framework\Json\Helper\Data::class)->jsonDecode($block->getWidgetOptionsJson());
    $widgetOptions = $this->helper(\Magento\Framework\Json\Helper\Data::class)->jsonEncode($widget['productListToolbarForm']);
    ?>

    <?php if ($block->getIsBottom()): ?>
        <div class="toolbar toolbar-products toolbar-products-bottom flex flex-col sm:flex-row justify-end items-center sm:items-start gap-5">
            <?= $block->getPagerHtml() ?>
			<?= /* @noEscape */ $block->fetchView($block->getTemplateFile('Magento_Catalog::product/list/toolbar/limiter.phtml')) ?>
        </div>
    <?php else: ?>
        <div class="toolbar toolbar-products toolbar-products-top flex justify-between items-start gap-5">
            <div class="inline-flex flex-col items-start justify-start gap-y-2 gap-x-4 mb-5 md:flex-row md:items-center md:justify-between">
                <?php if ($block->isExpanded()): ?>
                    <?php if ($block->getData('showFilter')): ?>
                        <button x-data @click="$dispatch('set-layered-navigation', true)" type="button" class="inline-flex justify-start items-center gap-1 grid-list-view shadow-sm md:hidden text-gray-900 ring-1 ring-inset ring-gray-300 text-sm rounded-md focus:ring-primary focus:border-primary p-2.5 py-2">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z" />
                            </svg>
                            <span><?= $escaper->escapeHtml(__('Filter')) ?></span>
                        </button>
                    <?php endif ?>
                    <?= /* @noEscape */ $block->fetchView($block->getTemplateFile('Magento_Catalog::product/list/toolbar/viewmode.phtml')) ?>
                <?php endif ?>
                <?= /* @noEscape */ $block->fetchView($block->getTemplateFile('Magento_Catalog::product/list/toolbar/amount.phtml')) ?>
            </div>
            <?php if ($block->isExpanded()): ?>
                <?= /* @noEscape */ $block->fetchView($block->getTemplateFile('Magento_Catalog::product/list/toolbar/sorter.phtml')) ?>
            <?php endif ?>
        </div>
    <?php endif ?>
	</div>
<?php endif ?>
